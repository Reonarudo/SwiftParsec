{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"labels"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"...) -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"message","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new error message."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser with a replaced error message."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is normally used at the end of a set alternatives where we want to"},{"type":"text","text":" "},{"type":"text","text":"return an error message in terms of a higher level construct rather than"},{"type":"text","text":" "},{"type":"text","text":"returning all possible characters. For example, if the "},{"type":"codeVoice","code":"expr"},{"type":"text","text":" parser"},{"type":"text","text":" "},{"type":"text","text":"from the "},{"type":"codeVoice","code":"attempt"},{"type":"text","text":" example would fail, the error message is: ‘…:"},{"type":"text","text":" "},{"type":"text","text":"expecting expression’. Without the "},{"type":"codeVoice","code":"GenericParser.labels()"},{"type":"text","text":" combinator,"},{"type":"text","text":" "},{"type":"text","text":"the message would be like ‘…: expecting “let” or “letter”’, which is"},{"type":"text","text":" "},{"type":"text","text":"less friendly."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method has the synonym infix operator "},{"type":"codeVoice","code":"<?>"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftparsec\/parsec\/labels(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Parsec\/labels(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The parser returned by "},{"type":"codeVoice","code":"p.labels(message)"},{"type":"text","text":" behaves as parser "},{"type":"codeVoice","code":"p"},{"type":"text","text":", but"},{"type":"text","text":" "},{"type":"text","text":"whenever the parser "},{"type":"codeVoice","code":"p"},{"type":"text","text":" fails "},{"type":"emphasis","inlineContent":[{"type":"text","text":"without consuming any input"}]},{"type":"text","text":", it replaces"},{"type":"text","text":" "},{"type":"text","text":"expected error messages with the expected error message "},{"type":"codeVoice","code":"message"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"labels(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"labels"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"...) -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","externalID":"s:11SwiftParsec0B0P6labelsyxSSd_tF","required":true,"modules":[{"name":"SwiftParsec"}]},"hierarchy":{"paths":[["doc:\/\/SwiftParsec\/documentation\/SwiftParsec","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Parsec"]]},"references":{"doc://SwiftParsec/documentation/SwiftParsec/Parsec/labels(_:)":{"role":"symbol","title":"labels(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"labels"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"...) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"The parser returned by "},{"type":"codeVoice","code":"p.labels(message)"},{"type":"text","text":" behaves as parser "},{"type":"codeVoice","code":"p"},{"type":"text","text":", but"},{"type":"text","text":" "},{"type":"text","text":"whenever the parser "},{"type":"codeVoice","code":"p"},{"type":"text","text":" fails "},{"type":"emphasis","inlineContent":[{"type":"text","text":"without consuming any input"}]},{"type":"text","text":", it replaces"},{"type":"text","text":" "},{"type":"text","text":"expected error messages with the expected error message "},{"type":"codeVoice","code":"message"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Parsec\/labels(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/parsec\/labels(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/Parsec":{"role":"symbol","title":"Parsec","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsec"}],"abstract":[{"type":"codeVoice","code":"Parsec"},{"type":"text","text":" is a parser with stream type "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":", user state type "},{"type":"codeVoice","code":"UserState"},{"type":"text","text":" "},{"type":"text","text":"and return type "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Parsec","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parsec"}],"url":"\/documentation\/swiftparsec\/parsec"},"doc://SwiftParsec/documentation/SwiftParsec":{"role":"collection","title":"SwiftParsec","abstract":[],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec"}}}