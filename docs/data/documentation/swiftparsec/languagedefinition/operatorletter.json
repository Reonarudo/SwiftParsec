{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"operatorLetter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC","text":"GenericParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftparsec\/languagedefinition\/operatorletter"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/operatorLetter","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This parser should accept any legal tail characters of operators. Note"},{"type":"text","text":" "},{"type":"text","text":"that this parser should even be defined if the language doesn’t support"},{"type":"text","text":" "},{"type":"text","text":"user-defined operators, or otherwise the "},{"type":"codeVoice","code":"reservedOperators"},{"type":"text","text":" parser"},{"type":"text","text":" "},{"type":"text","text":"won’t work correctly."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"operatorLetter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"title":"operatorLetter","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:11SwiftParsec18LanguageDefinitionV14operatorLetterAA13GenericParserCySSxSJGvp","modules":[{"name":"SwiftParsec"}]},"hierarchy":{"paths":[["doc:\/\/SwiftParsec\/documentation\/SwiftParsec","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition"]]},"references":{"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition":{"role":"symbol","title":"LanguageDefinition","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LanguageDefinition"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LanguageDefinition"},{"type":"text","text":" structure contains all parameterizable features of"},{"type":"text","text":" "},{"type":"text","text":"the token parser. There is some default definitions provided by SwiftParsec."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LanguageDefinition"}],"url":"\/documentation\/swiftparsec\/languagedefinition"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser":{"role":"symbol","title":"GenericParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericParser"}],"abstract":[{"type":"codeVoice","code":"GenericParser"},{"type":"text","text":" is a generic implementation of the "},{"type":"codeVoice","code":"Parsec"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericParser"}],"url":"\/documentation\/swiftparsec\/genericparser"},"doc://SwiftParsec/documentation/SwiftParsec":{"role":"collection","title":"SwiftParsec","abstract":[],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/operatorLetter":{"role":"symbol","title":"operatorLetter","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"operatorLetter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This parser should accept any legal tail characters of operators. Note"},{"type":"text","text":" "},{"type":"text","text":"that this parser should even be defined if the language doesn’t support"},{"type":"text","text":" "},{"type":"text","text":"user-defined operators, or otherwise the "},{"type":"codeVoice","code":"reservedOperators"},{"type":"text","text":" parser"},{"type":"text","text":" "},{"type":"text","text":"won’t work correctly."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/operatorLetter","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/operatorletter"}}}