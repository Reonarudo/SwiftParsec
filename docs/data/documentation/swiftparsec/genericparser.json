{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericParser"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StreamType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"UserState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Stream","preciseIdentifier":"s:11SwiftParsec6StreamP","text":"Stream"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"StreamType.Iterator has to be a value type."}]}],"type":"aside","name":"Requires"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftparsec\/genericparser"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Parsec"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GenericParser"},{"type":"text","text":" is a generic implementation of the "},{"type":"codeVoice","code":"Parsec"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericParser"}],"title":"GenericParser","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:11SwiftParsec13GenericParserC","modules":[{"name":"SwiftParsec"}],"navigatorTitle":[{"kind":"identifier","text":"GenericParser"}]},"hierarchy":{"paths":[["doc:\/\/SwiftParsec\/documentation\/SwiftParsec"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/init(function:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/init(result:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/attempt","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/discard","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lookAhead","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/many","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/many1","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/noOccurence","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/optional","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/skipMany","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/skipMany1"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/alternative(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/apply(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/between(_:_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/chainLeft(_:otherwise:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/chainLeft1(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/chainRight(_:otherwise:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/chainRight1(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/count(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/dividedBy(_:endSeparatorRequired:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/dividedBy1(_:endSeparatorRequired:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/flatMap(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/labels(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/manyAccumulator(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/manyTill(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/map(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/otherwise(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/runSafe(userState:sourceName:input:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/separatedBy(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/separatedBy1(_:)"]},{"title":"Type Properties","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/empty","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/sourcePosition","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/userState"]},{"title":"Type Methods","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/choice(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/fail(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lift2(_:parser1:parser2:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lift3(_:parser1:parser2:parser3:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lift4(_:parser1:parser2:parser3:parser4:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lift5(_:parser1:parser2:parser3:parser4:parser5:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/recursive(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/unexpected(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/updateUserState(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/Parsec-Implementations"],"generated":true}],"references":{"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/apply(_:)":{"role":"symbol","title":"apply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser by applying the function contained in the supplied"},{"type":"text","text":" "},{"type":"text","text":"parser to self."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/apply(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/apply(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/dividedBy1(_:endSeparatorRequired:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"dividedBy1(_:endSeparatorRequired:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dividedBy1"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Separator"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"endSeparatorRequired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"one"}]},{"type":"text","text":" or more occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"separated and optionally ended by "},{"type":"codeVoice","code":"separator"},{"type":"text","text":". It returns an array of"},{"type":"text","text":" "},{"type":"text","text":"values returned by "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/dividedBy1(_:endSeparatorRequired:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/dividedby1(_:endseparatorrequired:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/updateUserState(_:)":{"role":"symbol","title":"updateUserState(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateUserState"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"updateUserState"},{"type":"text","text":" method applies the function "},{"type":"codeVoice","code":"update"},{"type":"text","text":" to the user"},{"type":"text","text":" "},{"type":"text","text":"state. Suppose that we want to count identifiers in a source, we could"},{"type":"text","text":" "},{"type":"text","text":"use the user state as:"}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/updateUserState(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/updateuserstate(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/between(_:_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"between(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"between"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"U"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"codeVoice","code":"opening"},{"type":"text","text":", followed by "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"closing"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It returns the value returned by "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/between(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/between(_:_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/noOccurence":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"noOccurence","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"noOccurence"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"A parser that only succeeds when parser "},{"type":"codeVoice","code":"self"},{"type":"text","text":" fails. This parser does"},{"type":"text","text":" "},{"type":"text","text":"not consume any input. This parser can be used to implement the"},{"type":"text","text":" "},{"type":"text","text":"‘longest match’ rule. For example, when recognizing keywords (for"},{"type":"text","text":" "},{"type":"text","text":"example "},{"type":"codeVoice","code":"let"},{"type":"text","text":"), we want to make sure that a keyword is not followed by a"},{"type":"text","text":" "},{"type":"text","text":"legal identifier character, in which case the keyword is actually an"},{"type":"text","text":" "},{"type":"text","text":"identifier (for example "},{"type":"codeVoice","code":"lets"},{"type":"text","text":"). We can program this behaviour as"},{"type":"text","text":" "},{"type":"text","text":"follows:"}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/noOccurence","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/nooccurence"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/fail(_:)":{"role":"symbol","title":"fail(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fail"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that always fail with the supplied message."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/fail(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/fail(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/lift3(_:parser1:parser2:parser3:)":{"role":"symbol","title":"lift3(_:parser1:parser2:parser3:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift3"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Param1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param3"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param3"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parser1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param3"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that applies the result of the supplied parsers to the"},{"type":"text","text":" "},{"type":"text","text":"lifted function. The parsers are applied from left to right."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lift3(_:parser1:parser2:parser3:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/lift3(_:parser1:parser2:parser3:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/sourcePosition":{"role":"symbol","title":"sourcePosition","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourcePosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SourcePosition","preciseIdentifier":"s:11SwiftParsec14SourcePositionV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return the current source position."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/sourcePosition","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/sourceposition"},"doc://SwiftParsec/documentation/SwiftParsec/Stream":{"role":"symbol","title":"Stream","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":" instance is responsible for maintaining the position of the"},{"type":"text","text":" "},{"type":"text","text":"parser’s stream."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Stream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/swiftparsec\/stream"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/chainRight(_:otherwise:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"chainRight(_:otherwise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chainRight"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"otherwise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"separated by "},{"type":"codeVoice","code":"oper"},{"type":"text","text":". Returns a value obtained by a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"right"}]},{"type":"text","text":" associative"},{"type":"text","text":" "},{"type":"text","text":"application of all functions returned by "},{"type":"codeVoice","code":"oper"},{"type":"text","text":" to the values returned"},{"type":"text","text":" "},{"type":"text","text":"by "},{"type":"codeVoice","code":"self"},{"type":"text","text":". If there are no occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":", the value "},{"type":"codeVoice","code":"otherwise"},{"type":"text","text":" "},{"type":"text","text":"is returned."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/chainRight(_:otherwise:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/chainright(_:otherwise:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/unexpected(_:)":{"role":"symbol","title":"unexpected(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpected"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that always fails with an unexpected error message"},{"type":"text","text":" "},{"type":"text","text":"without consuming any input."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/unexpected(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/unexpected(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/manyTill(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"manyTill(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"manyTill"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"End"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"End"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Return a parser that applies parser "},{"type":"codeVoice","code":"self"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more times until"},{"type":"text","text":" "},{"type":"text","text":"parser "},{"type":"codeVoice","code":"end"},{"type":"text","text":" succeeds. Returns the list of values returned by "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This parser can be used to scan comments:"}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/manyTill(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/manytill(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/many1":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"many1","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"many1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"A parser that applies "},{"type":"codeVoice","code":"self"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"one"}]},{"type":"text","text":" or more times. It returns an array of"},{"type":"text","text":" "},{"type":"text","text":"the returned values of "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/many1","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/many1"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/optional":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"optional","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"optional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"A parser that tries to apply "},{"type":"codeVoice","code":"self"},{"type":"text","text":". If "},{"type":"codeVoice","code":"self"},{"type":"text","text":" fails without consuming"},{"type":"text","text":" "},{"type":"text","text":"input, it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", otherwise it returns the value returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/optional","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/optional"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/empty":{"role":"symbol","title":"empty","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A parser that always fails without consuming any input."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/empty","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/empty"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser":{"role":"symbol","title":"GenericParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericParser"}],"abstract":[{"type":"codeVoice","code":"GenericParser"},{"type":"text","text":" is a generic implementation of the "},{"type":"codeVoice","code":"Parsec"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericParser"}],"url":"\/documentation\/swiftparsec\/genericparser"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/labels(_:)":{"role":"symbol","title":"labels(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"labels"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"...) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"The parser returned by "},{"type":"codeVoice","code":"p.labels(message)"},{"type":"text","text":" behaves as parser "},{"type":"codeVoice","code":"p"},{"type":"text","text":", but"},{"type":"text","text":" "},{"type":"text","text":"whenever the parser "},{"type":"codeVoice","code":"p"},{"type":"text","text":" fails "},{"type":"emphasis","inlineContent":[{"type":"text","text":"without consuming any input"}]},{"type":"text","text":", it replaces"},{"type":"text","text":" "},{"type":"text","text":"expected error messages with the expected error message "},{"type":"codeVoice","code":"message"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/labels(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/labels(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/manyAccumulator(_:)":{"role":"symbol","title":"manyAccumulator(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"manyAccumulator"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Accumulator"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Accumulator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Accumulator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Accumulator"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This combinator applies "},{"type":"codeVoice","code":"self"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more times. It returns an"},{"type":"text","text":" "},{"type":"text","text":"accumulation of the returned values of "},{"type":"codeVoice","code":"self"},{"type":"text","text":" that were passed to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"accumulator"},{"type":"text","text":" function."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/manyAccumulator(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/manyaccumulator(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/userState":{"role":"symbol","title":"userState","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"userState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return the user state."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/userState","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/userstate"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/flatMap(_:)":{"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser containing the result of mapping transform over "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/flatMap(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/flatmap(_:)"},"doc://SwiftParsec/documentation/SwiftParsec":{"role":"collection","title":"SwiftParsec","abstract":[{"type":"text","text":"Unleash the Power of Parser Combinators in Swift!"}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/skipMany1":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"skipMany1","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"skipMany1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"A parser that applies "},{"type":"codeVoice","code":"self"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"one"}]},{"type":"text","text":" or more times, skipping its result."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/skipMany1","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/skipmany1"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/separatedBy1(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"separatedBy1(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"separatedBy1"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Separator"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"one"}]},{"type":"text","text":" or more occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"separated by "},{"type":"codeVoice","code":"separator"},{"type":"text","text":". It returns an array of values returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/separatedBy1(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/separatedby1(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/lift5(_:parser1:parser2:parser3:parser4:parser5:)":{"role":"symbol","title":"lift5(_:parser1:parser2:parser3:parser4:parser5:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift5"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Param1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param5"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param5"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parser1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param3"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser4"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param4"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser5"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param5"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that applies the result of the supplied parsers to the"},{"type":"text","text":" "},{"type":"text","text":"lifted function. The parsers are applied from left to right."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lift5(_:parser1:parser2:parser3:parser4:parser5:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/lift5(_:parser1:parser2:parser3:parser4:parser5:)"},"doc://SwiftParsec/documentation/SwiftParsec/Parsec":{"role":"symbol","title":"Parsec","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsec"}],"abstract":[{"type":"codeVoice","code":"Parsec"},{"type":"text","text":" is a parser with stream type "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":", user state type "},{"type":"codeVoice","code":"UserState"},{"type":"text","text":" "},{"type":"text","text":"and return type "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Parsec","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parsec"}],"url":"\/documentation\/swiftparsec\/parsec"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/otherwise(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"otherwise(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"otherwise"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that tries to apply "},{"type":"codeVoice","code":"self"},{"type":"text","text":". If "},{"type":"codeVoice","code":"self"},{"type":"text","text":" fails without"},{"type":"text","text":" "},{"type":"text","text":"consuming input, it returns "},{"type":"codeVoice","code":"result"},{"type":"text","text":", or else the value returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/otherwise(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/otherwise(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/skipMany":{"role":"symbol","title":"skipMany","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"skipMany"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"skipMany"},{"type":"text","text":" combinator applies the parser "},{"type":"codeVoice","code":"self"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more"},{"type":"text","text":" "},{"type":"text","text":"times, skipping its result."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/skipMany","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/skipmany"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/separatedBy(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"separatedBy(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"separatedBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Separator"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"separated by "},{"type":"codeVoice","code":"separator"},{"type":"text","text":". It returns an array of values returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/separatedBy(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/separatedby(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/runSafe(userState:sourceName:input:)":{"role":"symbol","title":"runSafe(userState:sourceName:input:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runSafe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"userState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sourceName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Either","preciseIdentifier":"s:11SwiftParsec6EitherO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParseError","preciseIdentifier":"s:11SwiftParsec10ParseErrorV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Run the parser and return the result of the parsing if it succeeded."},{"type":"text","text":" "},{"type":"text","text":"If an error occured, it is returned. Contrary to the "},{"type":"codeVoice","code":"run()"},{"type":"text","text":" method, it"},{"type":"text","text":" "},{"type":"text","text":"doesn’t throw an exception."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/runSafe(userState:sourceName:input:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/runsafe(userstate:sourcename:input:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/choice(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"choice(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"choice"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that tries to apply the parsers in the array "},{"type":"codeVoice","code":"parsers"},{"type":"text","text":" "},{"type":"text","text":"in order, until one of them succeeds. It returns the value of the"},{"type":"text","text":" "},{"type":"text","text":"succeeding parser."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/choice(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/choice(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/dividedBy(_:endSeparatorRequired:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"dividedBy(_:endSeparatorRequired:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dividedBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Separator"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"endSeparatorRequired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"separated and optionally ended by "},{"type":"codeVoice","code":"separator"},{"type":"text","text":". It returns an array of"},{"type":"text","text":" "},{"type":"text","text":"values returned by "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/dividedBy(_:endSeparatorRequired:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/dividedby(_:endseparatorrequired:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/lookAhead":{"role":"symbol","title":"lookAhead","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookAhead"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A combinator that parses without consuming any input."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lookAhead","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/lookahead"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/lift2(_:parser1:parser2:)":{"role":"symbol","title":"lift2(_:parser1:parser2:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift2"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Param1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param2"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parser1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that applies the result of the supplied parsers to the"},{"type":"text","text":" "},{"type":"text","text":"lifted function. The parsers are applied from left to right."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lift2(_:parser1:parser2:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/lift2(_:parser1:parser2:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/lift4(_:parser1:parser2:parser3:parser4:)":{"role":"symbol","title":"lift4(_:parser1:parser2:parser3:parser4:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift4"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Param1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param4"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param4"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parser1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param3"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"parser4"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param4"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that applies the result of the supplied parsers to the"},{"type":"text","text":" "},{"type":"text","text":"lifted function. The parsers are applied from left to right."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lift4(_:parser1:parser2:parser3:parser4:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/lift4(_:parser1:parser2:parser3:parser4:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/init(result:)":{"role":"symbol","title":"init(result:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"result"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a parser containing the injected result."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/init(result:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/init(result:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/attempt":{"role":"symbol","title":"attempt","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"attempt"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This combinator is used whenever arbitrary look ahead is needed. Since"},{"type":"text","text":" "},{"type":"text","text":"it pretends that it hasn’t consumed any input when "},{"type":"codeVoice","code":"self"},{"type":"text","text":" fails, the"},{"type":"text","text":" "},{"type":"text","text":"(’<|>’) combinator will try its second alternative even when the first"},{"type":"text","text":" "},{"type":"text","text":"parser failed while consuming input."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/attempt","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/attempt"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/init(function:)":{"role":"symbol","title":"init(function:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"function"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Create a parser containing a function that return a parser. Used to"},{"type":"text","text":" "},{"type":"text","text":"execute functions lazily."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/init(function:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/init(function:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/discard":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"discard","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"discard"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"A parser that tries to apply "},{"type":"codeVoice","code":"self"},{"type":"text","text":". It will parse "},{"type":"codeVoice","code":"self"},{"type":"text","text":" or nothing."},{"type":"text","text":" "},{"type":"text","text":"It only fails if "},{"type":"codeVoice","code":"self"},{"type":"text","text":" fails after consuming input. It discards the"},{"type":"text","text":" "},{"type":"text","text":"result of "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/discard","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/discard"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/chainLeft1(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"chainLeft1(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chainLeft1"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"one"}]},{"type":"text","text":" or more occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"separated by oper"},{"type":"codeVoice","code":". Returns a value obtained by a _left_ associative application of all functions returned by "},{"type":"text","text":"oper"},{"type":"codeVoice","code":"to the values returned by"},{"type":"text","text":"self`. This parser can for example be used to eliminate left"},{"type":"text","text":" "},{"type":"text","text":"recursion which typically occurs in expression grammars."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/chainLeft1(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/chainleft1(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/chainRight1(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"chainRight1(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chainRight1"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"one"}]},{"type":"text","text":" or more occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"separated by "},{"type":"codeVoice","code":"oper"},{"type":"text","text":". Returns a value obtained by a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"right"}]},{"type":"text","text":" associative"},{"type":"text","text":" "},{"type":"text","text":"application of all functions returned by "},{"type":"codeVoice","code":"op"},{"type":"text","text":" to the values returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/chainRight1(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/chainright1(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/map(_:)":{"role":"symbol","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser containing the result of mapping transform over "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/map(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/map(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/count(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"count(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"count"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"codeVoice","code":"n"},{"type":"text","text":" occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":". If "},{"type":"codeVoice","code":"n"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"smaller or equal to zero, the parser returns "},{"type":"codeVoice","code":"[]"},{"type":"text","text":". It returns an array"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"n"},{"type":"text","text":" values returned by "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/count(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/count(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/Parsec-Implementations":{"role":"collectionGroup","title":"Parsec Implementations","abstract":[],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/Parsec-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/parsec-implementations"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/recursive(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"recursive(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"recursive"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a recursive parser combined with itself. It can be used to parse"},{"type":"text","text":" "},{"type":"text","text":"nested expressions. As an exemple, an expression inside a pair of"},{"type":"text","text":" "},{"type":"text","text":"parentheses is itself an expression that can be nested inside another"},{"type":"text","text":" "},{"type":"text","text":"pair of parentheses."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/recursive(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/recursive(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/many":{"role":"symbol","title":"many","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"many"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"many"},{"type":"text","text":" combinator applies the parser "},{"type":"codeVoice","code":"self"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more times. It"},{"type":"text","text":" "},{"type":"text","text":"returns an array of the returned values of "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/many","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/many"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/alternative(_:)":{"role":"symbol","title":"alternative(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alternative"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This combinator implements choice. The parser "},{"type":"codeVoice","code":"p.alternative(q)"},{"type":"text","text":" first"},{"type":"text","text":" "},{"type":"text","text":"applies "},{"type":"codeVoice","code":"p"},{"type":"text","text":". If it succeeds, the value of "},{"type":"codeVoice","code":"p"},{"type":"text","text":" is returned. If "},{"type":"codeVoice","code":"p"},{"type":"text","text":" fails"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"without consuming any input"}]},{"type":"text","text":", parser "},{"type":"codeVoice","code":"q"},{"type":"text","text":" is tried. The parser is called"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"predictive"}]},{"type":"text","text":" since "},{"type":"codeVoice","code":"q"},{"type":"text","text":" is only tried when parser "},{"type":"codeVoice","code":"p"},{"type":"text","text":" didn’t consume any"},{"type":"text","text":" "},{"type":"text","text":"input (i.e.. the look ahead is 1). This non-backtracking behaviour"},{"type":"text","text":" "},{"type":"text","text":"allows for both an efficient implementation of the parser combinators"},{"type":"text","text":" "},{"type":"text","text":"and the generation of good error messages."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/alternative(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/alternative(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/chainLeft(_:otherwise:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"chainLeft(_:otherwise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chainLeft"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"otherwise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"separated by "},{"type":"codeVoice","code":"oper"},{"type":"text","text":". Returns a value obtained by a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"left"}]},{"type":"text","text":" associative"},{"type":"text","text":" "},{"type":"text","text":"application of all functions returned by "},{"type":"codeVoice","code":"oper"},{"type":"text","text":" to the values returned"},{"type":"text","text":" "},{"type":"text","text":"by "},{"type":"codeVoice","code":"self"},{"type":"text","text":". If there are zero occurrences of "},{"type":"codeVoice","code":"self"},{"type":"text","text":", the value"},{"type":"text","text":" "},{"type":"codeVoice","code":"otherwise"},{"type":"text","text":" is returned."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/chainLeft(_:otherwise:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/chainleft(_:otherwise:)"}}}