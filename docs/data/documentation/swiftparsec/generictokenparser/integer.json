{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"integer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC","text":"GenericParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftparsec\/generictokenparser\/integer"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser\/integer","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This lexeme parser parses an integer (a whole number). This parser is"},{"type":"text","text":" "},{"type":"text","text":"like "},{"type":"codeVoice","code":"natural"},{"type":"text","text":" except that it can be prefixed with sign (i.e. “-” or"},{"type":"text","text":" "},{"type":"text","text":"“+”). It returns the value of the number. The number can be specified in"},{"type":"text","text":" "},{"type":"text","text":"‘decimal’, ‘hexadecimal’ or ‘octal’."}],"kind":"symbol","metadata":{"role":"symbol","title":"integer","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"integer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"symbolKind":"property","externalID":"s:11SwiftParsec11TokenParserPAAE7integerAA07GenericD0CySS9UserStateQzSiGvp::SYNTHESIZED::s:11SwiftParsec18GenericTokenParserV","extendedModule":"SwiftParsec","modules":[{"name":"SwiftParsec"}]},"hierarchy":{"paths":[["doc:\/\/SwiftParsec\/documentation\/SwiftParsec","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser\/TokenParser-Implementations"]]},"references":{"doc://SwiftParsec/documentation/SwiftParsec/GenericTokenParser/TokenParser-Implementations":{"role":"collectionGroup","title":"TokenParser Implementations","abstract":[],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser\/TokenParser-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftparsec\/generictokenparser\/tokenparser-implementations"},"doc://SwiftParsec/documentation/SwiftParsec":{"role":"collection","title":"SwiftParsec","abstract":[],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser":{"role":"symbol","title":"GenericParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericParser"}],"abstract":[{"type":"codeVoice","code":"GenericParser"},{"type":"text","text":" is a generic implementation of the "},{"type":"codeVoice","code":"Parsec"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericParser"}],"url":"\/documentation\/swiftparsec\/genericparser"},"doc://SwiftParsec/documentation/SwiftParsec/GenericTokenParser/integer":{"role":"symbol","title":"integer","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"integer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This lexeme parser parses an integer (a whole number). This parser is"},{"type":"text","text":" "},{"type":"text","text":"like "},{"type":"codeVoice","code":"natural"},{"type":"text","text":" except that it can be prefixed with sign (i.e. “-” or"},{"type":"text","text":" "},{"type":"text","text":"“+”). It returns the value of the number. The number can be specified in"},{"type":"text","text":" "},{"type":"text","text":"‘decimal’, ‘hexadecimal’ or ‘octal’."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser\/integer","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/generictokenparser\/integer"},"doc://SwiftParsec/documentation/SwiftParsec/GenericTokenParser":{"role":"symbol","title":"GenericTokenParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericTokenParser"}],"abstract":[{"type":"text","text":"Generic implementation of the "},{"type":"codeVoice","code":"TokenParser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericTokenParser"}],"url":"\/documentation\/swiftparsec\/generictokenparser"}}}