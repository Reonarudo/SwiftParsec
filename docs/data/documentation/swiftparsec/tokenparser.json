{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenParser"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftparsec\/tokenparser"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Types implementing this protocol hold lexical parsers."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenParser"}],"title":"TokenParser","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:11SwiftParsec11TokenParserP","modules":[{"name":"SwiftParsec"}],"navigatorTitle":[{"kind":"identifier","text":"TokenParser"}]},"hierarchy":{"paths":[["doc:\/\/SwiftParsec\/documentation\/SwiftParsec"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/UserState"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/characterLiteral-65jk4","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/colon-j328","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/comma-7w42n","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/dot-1kbp","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/float-u480","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/identifier-9eupn","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/integer-686qy","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/integerAsFloat-5kdap","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/languageDefinition","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/legalOperator-41sh1","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/natural-3m53g","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/number-8k5zn","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/semicolon-ayzx","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/stringLiteral-4axff","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/whiteSpace-3kep8"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/angles(_:)-34t37","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/braces(_:)-vjcm","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/brackets(_:)-1o91a","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/commaSeparated(_:)-42zcs","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/commaSeparated1(_:)-5dwum","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/lexeme(_:)-1x6i1","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/parentheses(_:)-7bpfh","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/reservedName(_:)-612s2","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/reservedOperator(_:)-9eq7s","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/semicolonSeparated(_:)-7bxum","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/semicolonSeparated1(_:)-1i6mw","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/symbol(_:)-ibpl"]},{"title":"Type Properties","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/decimal-69de2","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/hexadecimal-4ahww","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/octal-4mj8h"]}],"references":{"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/commaSeparated(_:)-42zcs":{"defaultImplementations":1,"role":"symbol","title":"commaSeparated(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"commaSeparated"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"commaSeparated(parser)"},{"type":"text","text":" parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more occurrences"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" separated by "},{"type":"codeVoice","code":"comma"},{"type":"text","text":". Returns an array of values returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"parser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/commaSeparated(_:)-42zcs","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/commaseparated(_:)-42zcs"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/semicolonSeparated(_:)-7bxum":{"defaultImplementations":1,"role":"symbol","title":"semicolonSeparated(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"semicolonSeparated"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"semicolonSeperated(parser)"},{"type":"text","text":" parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more"},{"type":"text","text":" "},{"type":"text","text":"occurrences of "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" separated by "},{"type":"codeVoice","code":"semicolon"},{"type":"text","text":". Returns an array of"},{"type":"text","text":" "},{"type":"text","text":"values returned by "},{"type":"codeVoice","code":"parser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/semicolonSeparated(_:)-7bxum","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/semicolonseparated(_:)-7bxum"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/semicolon-ayzx":{"defaultImplementations":1,"role":"symbol","title":"semicolon","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"semicolon"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"semicolon"},{"type":"text","text":" parses the character “;” and skips any"},{"type":"text","text":" "},{"type":"text","text":"trailing white space. Returns the string “;”."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/semicolon-ayzx","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/semicolon-ayzx"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/legalOperator-41sh1":{"defaultImplementations":1,"role":"symbol","title":"legalOperator","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"legalOperator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This lexeme parser parses a legal operator and returns the name of the"},{"type":"text","text":" "},{"type":"text","text":"operator. This parser will fail on any operators that are reserved"},{"type":"text","text":" "},{"type":"text","text":"operators. Legal operator (start) characters and reserved operators are"},{"type":"text","text":" "},{"type":"text","text":"defined in the "},{"type":"codeVoice","code":"LanguageDefinition"},{"type":"text","text":" that is passed to the initializer of"},{"type":"text","text":" "},{"type":"text","text":"this token parser. An ‘operator’ is treated as a single token using"},{"type":"text","text":" "},{"type":"codeVoice","code":"GenericParser.attempt"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/legalOperator-41sh1","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/legaloperator-41sh1"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/float-u480":{"defaultImplementations":1,"role":"symbol","title":"float","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"float"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This lexeme parser parses a floating point value and returns the value"},{"type":"text","text":" "},{"type":"text","text":"of the number."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/float-u480","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/float-u480"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/decimal-69de2":{"defaultImplementations":1,"role":"symbol","title":"decimal","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"decimal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Parses a positive whole number in the decimal system. Returns the value"},{"type":"text","text":" "},{"type":"text","text":"of the number."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/decimal-69de2","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/decimal-69de2"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser":{"role":"symbol","title":"TokenParser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenParser"}],"abstract":[{"type":"text","text":"Types implementing this protocol hold lexical parsers."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenParser"}],"url":"\/documentation\/swiftparsec\/tokenparser"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/octal-4mj8h":{"defaultImplementations":1,"role":"symbol","title":"octal","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"octal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Parses a positive whole number in the octal system. The number should be"},{"type":"text","text":" "},{"type":"text","text":"prefixed with “o” or “O”. Returns the value of the number."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/octal-4mj8h","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/octal-4mj8h"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/stringLiteral-4axff":{"defaultImplementations":1,"role":"symbol","title":"stringLiteral","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stringLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This lexeme parser parses a literal string and returns the literal"},{"type":"text","text":" "},{"type":"text","text":"string value. This parser deals correctly with escape sequences and"},{"type":"text","text":" "},{"type":"text","text":"gaps."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/stringLiteral-4axff","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/stringliteral-4axff"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/braces(_:)-vjcm":{"defaultImplementations":1,"role":"symbol","title":"braces(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"braces"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"braces(parser)"},{"type":"text","text":" parses "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" enclosed in braces “{”"},{"type":"text","text":" "},{"type":"text","text":"and “}”, returning the value of "},{"type":"codeVoice","code":"parser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/braces(_:)-vjcm","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/braces(_:)-vjcm"},"doc://SwiftParsec/documentation/SwiftParsec/GenericTokenParser":{"role":"symbol","title":"GenericTokenParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericTokenParser"}],"abstract":[{"type":"text","text":"Generic implementation of the "},{"type":"codeVoice","code":"TokenParser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericTokenParser"}],"url":"\/documentation\/swiftparsec\/generictokenparser"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/dot-1kbp":{"defaultImplementations":1,"role":"symbol","title":"dot","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dot"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"dot"},{"type":"text","text":" parses the character “.” and skips any trailing"},{"type":"text","text":" "},{"type":"text","text":"white space. Returns the string “.”."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/dot-1kbp","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/dot-1kbp"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/hexadecimal-4ahww":{"defaultImplementations":1,"role":"symbol","title":"hexadecimal","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hexadecimal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Parses a positive whole number in the hexadecimal system. The number"},{"type":"text","text":" "},{"type":"text","text":"should be prefixed with “x” or “X”. Returns the value of the number."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/hexadecimal-4ahww","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/hexadecimal-4ahww"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/brackets(_:)-1o91a":{"defaultImplementations":1,"role":"symbol","title":"brackets(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"brackets"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"brackets(parser)"},{"type":"text","text":" parses "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" enclosed in brackets"},{"type":"text","text":" "},{"type":"text","text":"“[” and “]”, returning the value of "},{"type":"codeVoice","code":"parser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/brackets(_:)-1o91a","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/brackets(_:)-1o91a"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/languageDefinition":{"role":"symbol","title":"languageDefinition","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"languageDefinition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LanguageDefinition","preciseIdentifier":"s:11SwiftParsec18LanguageDefinitionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Language definition parameterizing the lexer."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/languageDefinition","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/languagedefinition"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/colon-j328":{"defaultImplementations":1,"role":"symbol","title":"colon","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"colon"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"colon"},{"type":"text","text":" parses the character “:” and skips any trailing"},{"type":"text","text":" "},{"type":"text","text":"white space. Returns the string “:”."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/colon-j328","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/colon-j328"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/symbol(_:)-ibpl":{"defaultImplementations":1,"role":"symbol","title":"symbol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"symbol"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"symbol(str)"},{"type":"text","text":" parses "},{"type":"codeVoice","code":"str"},{"type":"text","text":" and skips trailing white space."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/symbol(_:)-ibpl","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/symbol(_:)-ibpl"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/number-8k5zn":{"defaultImplementations":1,"role":"symbol","title":"number","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"number"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Either","preciseIdentifier":"s:11SwiftParsec6EitherO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"This lexeme parser parses either "},{"type":"codeVoice","code":"integer"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"float"},{"type":"text","text":" and returns the"},{"type":"text","text":" "},{"type":"text","text":"value of the number. This parser deals with any overlap in the grammar"},{"type":"text","text":" "},{"type":"text","text":"rules for integers and floats."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/number-8k5zn","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/number-8k5zn"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/lexeme(_:)-1x6i1":{"defaultImplementations":1,"role":"symbol","title":"lexeme(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lexeme"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"codeVoice","code":"lexeme(parser)"},{"type":"text","text":" first applies "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" and than the "},{"type":"codeVoice","code":"whiteSpace"},{"type":"text","text":" "},{"type":"text","text":"parser, returning the value of "},{"type":"codeVoice","code":"parser"},{"type":"text","text":". Every lexical token (lexeme) is"},{"type":"text","text":" "},{"type":"text","text":"defined using "},{"type":"codeVoice","code":"lexeme"},{"type":"text","text":", this way every parse starts at a point without"},{"type":"text","text":" "},{"type":"text","text":"white space. Parsers that use "},{"type":"codeVoice","code":"lexeme"},{"type":"text","text":" are called "},{"type":"emphasis","inlineContent":[{"type":"text","text":"lexeme"}]},{"type":"text","text":" parsers in"},{"type":"text","text":" "},{"type":"text","text":"this document."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/lexeme(_:)-1x6i1","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/lexeme(_:)-1x6i1"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/commaSeparated1(_:)-5dwum":{"defaultImplementations":1,"role":"symbol","title":"commaSeparated1(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"commaSeparated1"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"commaSeparated1(parser)"},{"type":"text","text":" parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"one"}]},{"type":"text","text":" or more occurrences"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" separated by "},{"type":"codeVoice","code":"comma"},{"type":"text","text":". Returns an array of values returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"parser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/commaSeparated1(_:)-5dwum","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/commaseparated1(_:)-5dwum"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/comma-7w42n":{"defaultImplementations":1,"role":"symbol","title":"comma","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"comma"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"comma"},{"type":"text","text":" parses the character “,” and skips any trailing"},{"type":"text","text":" "},{"type":"text","text":"white space. Returns the string “,”."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/comma-7w42n","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/comma-7w42n"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/natural-3m53g":{"defaultImplementations":1,"role":"symbol","title":"natural","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"natural"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This lexeme parser parses a natural number (a positive whole number) and"},{"type":"text","text":" "},{"type":"text","text":"returns the value of the number. The number can be specified in"},{"type":"text","text":" "},{"type":"text","text":"‘decimal’, ‘hexadecimal’ or ‘octal’."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/natural-3m53g","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/natural-3m53g"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/reservedOperator(_:)-9eq7s":{"defaultImplementations":1,"role":"symbol","title":"reservedOperator(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reservedOperator"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"The lexeme parser "},{"type":"codeVoice","code":"reservedOperator(name)"},{"type":"text","text":" parses "},{"type":"codeVoice","code":"symbol(name)"},{"type":"text","text":", but it"},{"type":"text","text":" "},{"type":"text","text":"also checks that the "},{"type":"codeVoice","code":"name"},{"type":"text","text":" is not a prefix of a valid operator. A"},{"type":"text","text":" "},{"type":"text","text":"‘reservedOperator’ is treated as a single token using"},{"type":"text","text":" "},{"type":"codeVoice","code":"GenericParser.attempt"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/reservedOperator(_:)-9eq7s","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/reservedoperator(_:)-9eq7s"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/semicolonSeparated1(_:)-1i6mw":{"defaultImplementations":1,"role":"symbol","title":"semicolonSeparated1(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"semicolonSeparated1"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"semicolonSeperated1(parser)"},{"type":"text","text":" parses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"one"}]},{"type":"text","text":" or more"},{"type":"text","text":" "},{"type":"text","text":"occurrences of "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" separated by "},{"type":"codeVoice","code":"semicolon"},{"type":"text","text":". Returns an array of"},{"type":"text","text":" "},{"type":"text","text":"values returned by "},{"type":"codeVoice","code":"parser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/semicolonSeparated1(_:)-1i6mw","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/semicolonseparated1(_:)-1i6mw"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/angles(_:)-34t37":{"defaultImplementations":1,"role":"symbol","title":"angles(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"angles"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"angles(parser)"},{"type":"text","text":" parses "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" enclosed in angle"},{"type":"text","text":" "},{"type":"text","text":"brackets “<” and “>”, returning the value of "},{"type":"codeVoice","code":"parser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/angles(_:)-34t37","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/angles(_:)-34t37"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/parentheses(_:)-7bpfh":{"defaultImplementations":1,"role":"symbol","title":"parentheses(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parentheses"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Lexeme parser "},{"type":"codeVoice","code":"parentheses(parser)"},{"type":"text","text":" parses "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" enclosed in"},{"type":"text","text":" "},{"type":"text","text":"parentheses, returning the value of "},{"type":"codeVoice","code":"parser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/parentheses(_:)-7bpfh","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/parentheses(_:)-7bpfh"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/integerAsFloat-5kdap":{"defaultImplementations":1,"role":"symbol","title":"integerAsFloat","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"integerAsFloat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This lexeme parser parses an integer (a whole number). It is like"},{"type":"text","text":" "},{"type":"codeVoice","code":"integer"},{"type":"text","text":" except that it can parse bigger numbers. Returns the value of"},{"type":"text","text":" "},{"type":"text","text":"the number as a "},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/integerAsFloat-5kdap","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/integerasfloat-5kdap"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/reservedName(_:)-612s2":{"defaultImplementations":1,"role":"symbol","title":"reservedName(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reservedName"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"The lexeme parser "},{"type":"codeVoice","code":"reservedName(name)"},{"type":"text","text":" parses "},{"type":"codeVoice","code":"symbol(name)"},{"type":"text","text":", but it"},{"type":"text","text":" "},{"type":"text","text":"also checks that the "},{"type":"codeVoice","code":"name"},{"type":"text","text":" is not a prefix of a valid identifier. A"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"reserved"}]},{"type":"text","text":" word is treated as a single token using"},{"type":"text","text":" "},{"type":"codeVoice","code":"GenericParser.attempt"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/reservedName(_:)-612s2","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/reservedname(_:)-612s2"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/integer-686qy":{"defaultImplementations":1,"role":"symbol","title":"integer","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"integer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This lexeme parser parses an integer (a whole number). This parser is"},{"type":"text","text":" "},{"type":"text","text":"like "},{"type":"codeVoice","code":"natural"},{"type":"text","text":" except that it can be prefixed with sign (i.e. “-” or"},{"type":"text","text":" "},{"type":"text","text":"“+”). It returns the value of the number. The number can be specified in"},{"type":"text","text":" "},{"type":"text","text":"‘decimal’, ‘hexadecimal’ or ‘octal’."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/integer-686qy","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/integer-686qy"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/characterLiteral-65jk4":{"defaultImplementations":1,"role":"symbol","title":"characterLiteral","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"characterLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This lexeme parser parses a single literal character and returns the"},{"type":"text","text":" "},{"type":"text","text":"literal character value. This parser deals correctly with escape"},{"type":"text","text":" "},{"type":"text","text":"sequences."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/characterLiteral-65jk4","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/characterliteral-65jk4"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/UserState":{"role":"symbol","title":"UserState","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"UserState"}],"abstract":[{"type":"text","text":"The state supplied by the user."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/UserState","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/userstate"},"doc://SwiftParsec/documentation/SwiftParsec":{"role":"collection","title":"SwiftParsec","abstract":[],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/whiteSpace-3kep8":{"defaultImplementations":1,"role":"symbol","title":"whiteSpace","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"whiteSpace"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"Parses any white space. White space consists of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more"},{"type":"text","text":" "},{"type":"text","text":"occurrences of a ‘space’, a line comment or a block (multiline) comment."},{"type":"text","text":" "},{"type":"text","text":"Block comments may be nested. How comments are started and ended is"},{"type":"text","text":" "},{"type":"text","text":"defined in the "},{"type":"codeVoice","code":"LanguageDefinition"},{"type":"text","text":" that is passed to the initializer of"},{"type":"text","text":" "},{"type":"text","text":"this token parser."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/whiteSpace-3kep8","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/whitespace-3kep8"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser/identifier-9eupn":{"defaultImplementations":1,"role":"symbol","title":"identifier","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This lexeme parser parses a legal identifier. Returns the identifier"},{"type":"text","text":" "},{"type":"text","text":"string. This parser will fail on identifiers that are reserved words."},{"type":"text","text":" "},{"type":"text","text":"Legal identifier (start) characters and reserved words are defined in"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"LanguageDefinition"},{"type":"text","text":" that is passed to the initializer of this token"},{"type":"text","text":" "},{"type":"text","text":"parser. An "},{"type":"codeVoice","code":"identifier"},{"type":"text","text":" is treated as a single token using"},{"type":"text","text":" "},{"type":"codeVoice","code":"GenericParser.attempt"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser\/identifier-9eupn","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftparsec\/tokenparser\/identifier-9eupn"}}}