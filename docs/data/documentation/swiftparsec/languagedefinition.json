{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LanguageDefinition"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"UserState"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftparsec\/languagedefinition"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LanguageDefinition"},{"type":"text","text":" structure contains all parameterizable features of"},{"type":"text","text":" "},{"type":"text","text":"the token parser. There is some default definitions provided by SwiftParsec."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LanguageDefinition"}],"title":"LanguageDefinition","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:11SwiftParsec18LanguageDefinitionV","modules":[{"name":"SwiftParsec"}],"navigatorTitle":[{"kind":"identifier","text":"LanguageDefinition"}]},"hierarchy":{"paths":[["doc:\/\/SwiftParsec\/documentation\/SwiftParsec"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/allowNestedComments","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/characterEscape","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/commentEnd","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/commentLine","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/commentStart","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/identifierLetter","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/identifierStart","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/isCaseSensitive","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/operatorLetter","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/operatorStart","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/reservedNames","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/reservedOperators"]},{"title":"Type Properties","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/empty","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/javaStyle","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/json","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/swift"]}],"references":{"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/operatorLetter":{"role":"symbol","title":"operatorLetter","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"operatorLetter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This parser should accept any legal tail characters of operators. Note"},{"type":"text","text":" "},{"type":"text","text":"that this parser should even be defined if the language doesn’t support"},{"type":"text","text":" "},{"type":"text","text":"user-defined operators, or otherwise the "},{"type":"codeVoice","code":"reservedOperators"},{"type":"text","text":" parser"},{"type":"text","text":" "},{"type":"text","text":"won’t work correctly."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/operatorLetter","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/operatorletter"},"doc://SwiftParsec/documentation/SwiftParsec":{"role":"collection","title":"SwiftParsec","abstract":[{"type":"text","text":"Unleash the Power of Parser Combinators in Swift!"}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/javaStyle":{"role":"symbol","title":"javaStyle","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"javaStyle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LanguageDefinition","preciseIdentifier":"s:11SwiftParsec18LanguageDefinitionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This is a minimal token definition for Java style languages. It defines"},{"type":"text","text":" "},{"type":"text","text":"the style of comments, valid identifiers and case sensitivity. It does"},{"type":"text","text":" "},{"type":"text","text":"not define any reserved words or operators."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/javaStyle","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/javastyle"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/identifierLetter":{"role":"symbol","title":"identifierLetter","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identifierLetter"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This parser should accept any legal tail characters of identifiers. For"},{"type":"text","text":" "},{"type":"text","text":"example "},{"type":"codeVoice","code":"alphaNum <|> character(\"_\")"},{"type":"text","text":". The function receives the"},{"type":"text","text":" "},{"type":"text","text":"character parsed by "},{"type":"codeVoice","code":"identifierStart"},{"type":"text","text":" as parameter, allowing to handle"},{"type":"text","text":" "},{"type":"text","text":"special cases (i.e. implicit parameters in swift start with a ‘$’ that"},{"type":"text","text":" "},{"type":"text","text":"must be followed by decimal digits only)."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/identifierLetter","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/identifierletter"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/commentStart":{"role":"symbol","title":"commentStart","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"commentStart"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Describe the start of a block comment. Use the empty string if the"},{"type":"text","text":" "},{"type":"text","text":"language doesn’t support block comments. For example “\/*”."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/commentStart","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/commentstart"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/isCaseSensitive":{"role":"symbol","title":"isCaseSensitive","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isCaseSensitive"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Set to "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the language is case sensitive."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/isCaseSensitive","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/iscasesensitive"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/reservedNames":{"role":"symbol","title":"reservedNames","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reservedNames"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"The set of reserved identifiers."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/reservedNames","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/reservednames"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/json":{"role":"symbol","title":"json","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"json"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LanguageDefinition","preciseIdentifier":"s:11SwiftParsec18LanguageDefinitionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/json","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/json"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/empty":{"role":"symbol","title":"empty","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LanguageDefinition","preciseIdentifier":"s:11SwiftParsec18LanguageDefinitionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This is the most minimal token definition. It is recommended to use this"},{"type":"text","text":" "},{"type":"text","text":"definition as the basis for other definitions. "},{"type":"codeVoice","code":"empty"},{"type":"text","text":" has no reserved"},{"type":"text","text":" "},{"type":"text","text":"names or operators, is case sensitive and doesn’t accept comments,"},{"type":"text","text":" "},{"type":"text","text":"identifiers or operators."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/empty","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/empty"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition":{"role":"symbol","title":"LanguageDefinition","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LanguageDefinition"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LanguageDefinition"},{"type":"text","text":" structure contains all parameterizable features of"},{"type":"text","text":" "},{"type":"text","text":"the token parser. There is some default definitions provided by SwiftParsec."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LanguageDefinition"}],"url":"\/documentation\/swiftparsec\/languagedefinition"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/allowNestedComments":{"role":"symbol","title":"allowNestedComments","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allowNestedComments"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Set to "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the language supports nested block comments."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/allowNestedComments","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/allownestedcomments"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/reservedOperators":{"role":"symbol","title":"reservedOperators","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reservedOperators"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"The set of reserved operators."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/reservedOperators","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/reservedoperators"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/swift":{"role":"symbol","title":"swift","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"swift"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LanguageDefinition","preciseIdentifier":"s:11SwiftParsec18LanguageDefinitionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This is a minimal token definition for the swift 2.1 language. It"},{"type":"text","text":" "},{"type":"text","text":"defines the style of comments, valid identifiers and operators, reserved"},{"type":"text","text":" "},{"type":"text","text":"names and operators, character escaping, and case sensitivity."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/swift","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/swift"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/characterEscape":{"role":"symbol","title":"characterEscape","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"characterEscape"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">?"}],"abstract":[{"type":"text","text":"This optional parser should accept escaped characters. This parser will"},{"type":"text","text":" "},{"type":"text","text":"also replace the string gap and zero-width escape sequence parsers. The"},{"type":"text","text":" "},{"type":"text","text":"default escape sequences have the following form: ‘\\97’ ‘\\x61’, ‘\\o141’,"},{"type":"text","text":" "},{"type":"text","text":"‘^@’, ‘\\n’, \\NUL."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/characterEscape","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/characterescape"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/identifierStart":{"role":"symbol","title":"identifierStart","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identifierStart"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This parser should accept any start characters of identifiers. For"},{"type":"text","text":" "},{"type":"text","text":"example "},{"type":"codeVoice","code":"letter <|> character(\"_\")"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/identifierStart","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/identifierstart"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/commentEnd":{"role":"symbol","title":"commentEnd","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"commentEnd"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Describe the end of a block comment. Use the empty string if the"},{"type":"text","text":" "},{"type":"text","text":"language doesn’t support block comments. For example “*\/”."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/commentEnd","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/commentend"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/operatorStart":{"role":"symbol","title":"operatorStart","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"operatorStart"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"This parser should accept any start characters of operators. For example"},{"type":"text","text":" "},{"type":"codeVoice","code":"oneOf(\":!#$%&*+.\/<=>?@\\\\^|-~\")"}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/operatorStart","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/operatorstart"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition/commentLine":{"role":"symbol","title":"commentLine","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"commentLine"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Describe the start of a line comment. Use the empty string if the"},{"type":"text","text":" "},{"type":"text","text":"language doesn’t support line comments. For example “\/\/”."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition\/commentLine","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/languagedefinition\/commentline"}}}