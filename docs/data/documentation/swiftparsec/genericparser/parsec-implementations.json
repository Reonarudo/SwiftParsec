{"variants":[{"paths":["\/documentation\/swiftparsec\/genericparser\/parsec-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/Parsec-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/___(_:_:)-mk5g","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/___(_:_:)-t050"],"generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/stringValue"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/run(sourceName:input:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/run(userState:sourceName:input:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/test(input:)"],"generated":true},{"title":"Type Properties","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/alphaNumeric","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/anyCharacter","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/anyToken","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/crlf","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/decimalDigit","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/digit","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/endOfLine","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/eof","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/hexadecimalDigit","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/letter","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lowercase","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/newLine","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/octalDigit","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/space","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/spaces","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/symbol","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/tab","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/unicodeSpace","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/uppercase"],"generated":true},{"title":"Type Methods","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/character(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/memberOf(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/noneOf(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/oneOf(_:)-5n626","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/oneOf(_:)-6j248","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/satisfy(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/string(_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/tokenPrimitive(tokenDescription:nextPosition:match:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/tokens(tokensDescription:nextPosition:tokens:)"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"SwiftParsec"}],"role":"collectionGroup","title":"Parsec Implementations"},"hierarchy":{"paths":[["doc:\/\/SwiftParsec\/documentation\/SwiftParsec","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser"]]},"references":{"doc://SwiftParsec/documentation/SwiftParsec/GenericParser":{"role":"symbol","title":"GenericParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericParser"}],"abstract":[{"type":"codeVoice","code":"GenericParser"},{"type":"text","text":" is a generic implementation of the "},{"type":"codeVoice","code":"Parsec"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericParser"}],"url":"\/documentation\/swiftparsec\/genericparser"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/letter":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"letter","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"letter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a character in the categories of Letters and Marks."},{"type":"text","text":" "},{"type":"text","text":"It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/letter","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/letter"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/hexadecimalDigit":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"hexadecimalDigit","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hexadecimalDigit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses an ASCII hexadecimal digit, i.e. “0”…“9”,"},{"type":"text","text":" "},{"type":"text","text":"“a”…“f”, “A”…“F”. It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/hexadecimalDigit","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/hexadecimaldigit"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/digit":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"digit","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"digit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a character in the category of Numbers. It returns"},{"type":"text","text":" "},{"type":"text","text":"the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/digit","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/digit"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/tab":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"tab","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"tab"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a tab character (”\\t”). It returns a tab character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/tab","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/tab"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/symbol":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"symbol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a character in the categories of Symbols. It"},{"type":"text","text":" "},{"type":"text","text":"returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/symbol"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/test(input:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"UserState"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"test(input:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"("},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Used for testing parsers. It applies "},{"type":"codeVoice","code":"self"},{"type":"text","text":" against "},{"type":"codeVoice","code":"input"},{"type":"text","text":" and prints"},{"type":"text","text":" "},{"type":"text","text":"the result."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/test(input:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/test(input:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/spaces":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"spaces","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"spaces"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"A Parser that skips "},{"type":"emphasis","inlineContent":[{"type":"text","text":"zero"}]},{"type":"text","text":" or more unicode white space characters."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/spaces","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/spaces"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/run(sourceName:input:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"UserState"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"run(sourceName:input:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sourceName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"}],"abstract":[{"type":"text","text":"Run the parser and return the result of the parsing."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/run(sourceName:input:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/run(sourcename:input:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/newLine":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"newLine","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"newLine"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a newline character (”\\n”). It returns a newline"},{"type":"text","text":" "},{"type":"text","text":"character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/newLine","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/newline"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/satisfy(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"satisfy(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"satisfy"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that succeeds for any character for which the supplied"},{"type":"text","text":" "},{"type":"text","text":"function "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". The parser returns the character"},{"type":"text","text":" "},{"type":"text","text":"that is actually parsed."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/satisfy(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/satisfy(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/space":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"space","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"space"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses any space character, and the control characters \\t,"},{"type":"text","text":" "},{"type":"text","text":"\\n, \\r, \\f, \\v. It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/space","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/space"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/crlf":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"crlf","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"crlf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a carriage return character (”\\r”) followed by a"},{"type":"text","text":" "},{"type":"text","text":"newline character (”\\n”). It returns a newline character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/crlf","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/crlf"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/anyToken":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.StreamType.ArrayLiteralElement"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"anyToken","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"anyToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A parser that accepts any kind of token. It is for example used to"},{"type":"text","text":" "},{"type":"text","text":"implement ‘eof’. It returns the accepted token."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/anyToken","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/anytoken"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/memberOf(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"memberOf(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memberOf"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CharacterSet","preciseIdentifier":"s:11SwiftParsec12CharacterSeta"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that succeeds for any character that are member of the"},{"type":"text","text":" "},{"type":"text","text":"supplied "},{"type":"codeVoice","code":"CharacterSet"},{"type":"text","text":". It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/memberOf(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/memberof(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/anyCharacter":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"anyCharacter","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"anyCharacter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that succeeds for any character. It returns the parsed"},{"type":"text","text":" "},{"type":"text","text":"character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/anyCharacter","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/anycharacter"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/string(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"string(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that parses a "},{"type":"codeVoice","code":"String"},{"type":"text","text":". It returns the parsed string"},{"type":"text","text":" "},{"type":"text","text":"(i.e. "},{"type":"codeVoice","code":"str"},{"type":"text","text":")."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/string(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/string(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/character(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"character(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"character"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that parses a single character "},{"type":"codeVoice","code":"Character"},{"type":"text","text":". It returns"},{"type":"text","text":" "},{"type":"text","text":"the parsed character (i.e. "},{"type":"codeVoice","code":"char"},{"type":"text","text":")."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/character(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/character(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/oneOf(_:)-6j248":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"oneOf(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"oneOf"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that succeeds if the current character is in the"},{"type":"text","text":" "},{"type":"text","text":"supplied list of characters. It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/oneOf(_:)-6j248","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/oneof(_:)-6j248"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/decimalDigit":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"decimalDigit","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"decimalDigit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses an ASCII decimal digit, i.e. between “0” and “9”."},{"type":"text","text":" "},{"type":"text","text":"It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/decimalDigit","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/decimaldigit"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/___(_:_:)-mk5g":{"role":"symbol","title":"<?>(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<?>"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Infix operator for "},{"type":"codeVoice","code":"Parsec.labels()"},{"type":"text","text":". It has the lowest precedence of the"},{"type":"text","text":" "},{"type":"text","text":"parsers operators."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/___(_:_:)-mk5g","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/___(_:_:)-mk5g"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/oneOf(_:)-5n626":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"oneOf(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"oneOf"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that succeeds if the current character is in the"},{"type":"text","text":" "},{"type":"text","text":"supplied interval of characters. It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/oneOf(_:)-5n626","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/oneof(_:)-5n626"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/run(userState:sourceName:input:)":{"role":"symbol","title":"run(userState:sourceName:input:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"userState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sourceName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"}],"abstract":[{"type":"text","text":"Run the parser and return the result of the parsing."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/run(userState:sourceName:input:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/run(userstate:sourcename:input:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/stringValue":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"stringValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stringValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that maps a "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/stringValue","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/stringvalue"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/alphaNumeric":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"alphaNumeric","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphaNumeric"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a character in the categories of Letters, Marks,"},{"type":"text","text":" "},{"type":"text","text":"and Numbers. It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/alphaNumeric","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/alphanumeric"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/endOfLine":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"endOfLine","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endOfLine"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a CRLF (see "},{"type":"codeVoice","code":"crlf"},{"type":"text","text":") or LF (see "},{"type":"codeVoice","code":"newLine"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"end-of-line. It returns a newline character (”\\n”)."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/endOfLine","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/endofline"},"doc://SwiftParsec/documentation/SwiftParsec":{"role":"collection","title":"SwiftParsec","abstract":[{"type":"text","text":"Unleash the Power of Parser Combinators in Swift!"}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/___(_:_:)-t050":{"role":"symbol","title":"<|>(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<|>"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Infix operator for "},{"type":"codeVoice","code":"Parsec.alternative"},{"type":"text","text":". It has a higher precedence than"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":">>-"},{"type":"text","text":" operator."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/___(_:_:)-t050","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/___(_:_:)-t050"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/lowercase":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"lowercase","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"lowercase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a character in the category of Lowercase Letters."},{"type":"text","text":" "},{"type":"text","text":"It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/lowercase","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/lowercase"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/tokenPrimitive(tokenDescription:nextPosition:match:)":{"role":"symbol","title":"tokenPrimitive(tokenDescription:nextPosition:match:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokenPrimitive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tokenDescription"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nextPosition"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"SourcePosition","preciseIdentifier":"s:11SwiftParsec14SourcePositionV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourcePosition","preciseIdentifier":"s:11SwiftParsec14SourcePositionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"match"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that accepts a token "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" with "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" when the"},{"type":"text","text":" "},{"type":"text","text":"function "},{"type":"codeVoice","code":"match(Element) -> Result"},{"type":"text","text":" returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"Optional.SomeWrapped(Result)"},{"type":"text","text":". The token can be shown using"},{"type":"text","text":" "},{"type":"codeVoice","code":"tokenDescription(Element) -> String"},{"type":"text","text":". The position of the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"next"}]},{"type":"text","text":" token"},{"type":"text","text":" "},{"type":"text","text":"should be returned when"},{"type":"text","text":" "},{"type":"codeVoice","code":"nextPosition(SourcePosition, Element, StreamType) -> SourcePosition"},{"type":"text","text":" "},{"type":"text","text":"is called with the current source position, the current token and the"},{"type":"text","text":" "},{"type":"text","text":"rest of the tokens."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/tokenPrimitive(tokenDescription:nextPosition:match:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/tokenprimitive(tokendescription:nextposition:match:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/tokens(tokensDescription:nextPosition:tokens:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"tokens(tokensDescription:nextPosition:tokens:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tokensDescription"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nextPosition"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"SourcePosition","preciseIdentifier":"s:11SwiftParsec14SourcePositionV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourcePosition","preciseIdentifier":"s:11SwiftParsec14SourcePositionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tokens"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that parses a collection of tokens."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/tokens(tokensDescription:nextPosition:tokens:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/tokens(tokensdescription:nextposition:tokens:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/unicodeSpace":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"unicodeSpace","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeSpace"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a white space character (any Unicode space"},{"type":"text","text":" "},{"type":"text","text":"character, and the control characters \\t, \\n, \\r, \\f, \\v). It returns"},{"type":"text","text":" "},{"type":"text","text":"the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/unicodeSpace","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/unicodespace"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/noneOf(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"noneOf(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"noneOf"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that succeeds if the current character is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"supplied list of characters. It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/noneOf(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/noneof(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/eof":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.StreamType.ArrayLiteralElement"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"eof","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"eof"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ()>"}],"abstract":[{"type":"text","text":"A parser that only succeeds at the end of the input. This is not a"},{"type":"text","text":" "},{"type":"text","text":"primitive parser but it is defined using "},{"type":"codeVoice","code":"GenericParser.noOccurence"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/eof","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/eof"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/uppercase":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"uppercase","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"uppercase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses a character in the category of Uppercase and"},{"type":"text","text":" "},{"type":"text","text":"Titlecase Letters. It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/uppercase","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/uppercase"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/octalDigit":{"conformance":{"constraints":[{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StreamType.ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Character"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"octalDigit","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"octalDigit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A Parser that parses an octal digit (a character between “0” and “7”)."},{"type":"text","text":" "},{"type":"text","text":"It returns the parsed character."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/octalDigit","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/octaldigit"}}}