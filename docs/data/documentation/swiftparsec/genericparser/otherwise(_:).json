{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"otherwise"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"result"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC","text":"GenericParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"result","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The result to return if "},{"type":"codeVoice","code":"self"},{"type":"text","text":" fails without"},{"type":"text","text":" "},{"type":"text","text":"consuming input."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that tries to apply "},{"type":"codeVoice","code":"self"},{"type":"text","text":". If "},{"type":"codeVoice","code":"self"},{"type":"text","text":" fails without"},{"type":"text","text":" "},{"type":"text","text":"consuming input, it returns "},{"type":"codeVoice","code":"result"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftparsec\/genericparser\/otherwise(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/otherwise(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Return a parser that tries to apply "},{"type":"codeVoice","code":"self"},{"type":"text","text":". If "},{"type":"codeVoice","code":"self"},{"type":"text","text":" fails without"},{"type":"text","text":" "},{"type":"text","text":"consuming input, it returns "},{"type":"codeVoice","code":"result"},{"type":"text","text":", or else the value returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"otherwise(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"otherwise"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:11SwiftParsec13GenericParserC9otherwiseyACyxq_q0_Gq0_F","extendedModule":"SwiftParsec","modules":[{"name":"SwiftParsec"}]},"hierarchy":{"paths":[["doc:\/\/SwiftParsec\/documentation\/SwiftParsec","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser"]]},"references":{"doc://SwiftParsec/documentation/SwiftParsec/GenericParser/otherwise(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StreamType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"otherwise(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"otherwise"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a parser that tries to apply "},{"type":"codeVoice","code":"self"},{"type":"text","text":". If "},{"type":"codeVoice","code":"self"},{"type":"text","text":" fails without"},{"type":"text","text":" "},{"type":"text","text":"consuming input, it returns "},{"type":"codeVoice","code":"result"},{"type":"text","text":", or else the value returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser\/otherwise(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/genericparser\/otherwise(_:)"},"doc://SwiftParsec/documentation/SwiftParsec/GenericParser":{"role":"symbol","title":"GenericParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericParser"}],"abstract":[{"type":"codeVoice","code":"GenericParser"},{"type":"text","text":" is a generic implementation of the "},{"type":"codeVoice","code":"Parsec"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericParser"}],"url":"\/documentation\/swiftparsec\/genericparser"},"doc://SwiftParsec/documentation/SwiftParsec":{"role":"collection","title":"SwiftParsec","abstract":[{"type":"text","text":"Unleash the Power of Parser Combinators in Swift!"}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec"}}}