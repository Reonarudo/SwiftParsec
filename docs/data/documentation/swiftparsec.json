{"variants":[{"paths":["\/documentation\/swiftparsec"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","interfaceLanguage":"swift"},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser"]},{"title":"Protocols","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/EmptyInitializable","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Parsec","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Stream","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser"]},{"title":"Structures","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Configuration","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/OperatorTable","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/ParseError","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Permutation","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/SourcePosition"]},{"title":"Operators","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/*_(_:_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/==(_:_:)-66ml4","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/==(_:_:)-8p070","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/_(_:_:)-1edl0","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/_(_:_:)-4hyj0","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/_*(_:_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/_*_(_:_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/__-(_:_:)","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/___(_:_:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/CharacterSet","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/StringParser"]},{"title":"Enumerations","identifiers":["doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Associativity","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Either","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Message","doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Operator"]}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"SwiftParsec","title":"SwiftParsec","symbolKind":"module","role":"collection","modules":[{"name":"SwiftParsec"}]},"hierarchy":{"paths":[[]]},"references":{"doc://SwiftParsec/documentation/SwiftParsec/GenericParser":{"role":"symbol","title":"GenericParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericParser"}],"abstract":[{"type":"codeVoice","code":"GenericParser"},{"type":"text","text":" is a generic implementation of the "},{"type":"codeVoice","code":"Parsec"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericParser"}],"url":"\/documentation\/swiftparsec\/genericparser"},"doc://SwiftParsec/documentation/SwiftParsec/EmptyInitializable":{"role":"symbol","title":"EmptyInitializable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyInitializable"}],"abstract":[{"type":"text","text":"Types conforming to the "},{"type":"codeVoice","code":"EmptyInitializable"},{"type":"text","text":" protocol provide an empty"},{"type":"text","text":" "},{"type":"text","text":"intializer."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/EmptyInitializable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EmptyInitializable"}],"url":"\/documentation\/swiftparsec\/emptyinitializable"},"doc://SwiftParsec/documentation/SwiftParsec/_*_(_:_:)":{"role":"symbol","title":"<*>(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<*>"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StreamType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"UserState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Infix operator for "},{"type":"codeVoice","code":"apply"},{"type":"text","text":". It has the same precedence as the equality"},{"type":"text","text":" "},{"type":"text","text":"operator ("},{"type":"codeVoice","code":"=="},{"type":"text","text":")."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/_*_(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/_*_(_:_:)"},"doc://SwiftParsec/documentation/SwiftParsec/CharacterSet":{"role":"symbol","title":"CharacterSet","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"CharacterSet"}],"abstract":[{"type":"text","text":"Ideally, we could use this for all platforms, but open-source"},{"type":"text","text":" "},{"type":"codeVoice","code":"Foundation.CharacterSet"},{"type":"text","text":" will fail at large sizes"}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/CharacterSet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CharacterSet"}],"url":"\/documentation\/swiftparsec\/characterset"},"doc://SwiftParsec/documentation/SwiftParsec/StringParser":{"role":"symbol","title":"StringParser","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringParser"}],"abstract":[{"type":"text","text":"String parser with an empty "},{"type":"codeVoice","code":"UserState"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/StringParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringParser"}],"url":"\/documentation\/swiftparsec\/stringparser"},"doc://SwiftParsec/documentation/SwiftParsec/ParseError":{"role":"symbol","title":"ParseError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParseError"}],"abstract":[{"type":"codeVoice","code":"ParseError"},{"type":"text","text":" represents parse errors. It provides the source position"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"codeVoice","code":"SourcePosition"},{"type":"text","text":") of the error and an array of error messages ("},{"type":"codeVoice","code":"Message"},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"ParseError"},{"type":"text","text":" can be returned by the function "},{"type":"codeVoice","code":"parse"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/ParseError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParseError"}],"url":"\/documentation\/swiftparsec\/parseerror"},"doc://SwiftParsec/documentation/SwiftParsec/Either":{"role":"symbol","title":"Either","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Either"}],"abstract":[{"type":"text","text":"The Either enumeration represents values with two possibilities: a value of"},{"type":"text","text":" "},{"type":"text","text":"type "},{"type":"codeVoice","code":"Either<L, R>"},{"type":"text","text":" is either "},{"type":"codeVoice","code":"Left(L)"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Right(R)"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Either","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Either"}],"url":"\/documentation\/swiftparsec\/either"},"doc://SwiftParsec/documentation/SwiftParsec/_(_:_:)-1edl0":{"role":"symbol","title":"<(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SourcePosition","preciseIdentifier":"s:11SwiftParsec14SourcePositionV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SourcePosition","preciseIdentifier":"s:11SwiftParsec14SourcePositionV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Comparison based on the line and column number."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/_(_:_:)-1edl0","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/_(_:_:)-1edl0"},"doc://SwiftParsec/documentation/SwiftParsec/__-(_:_:)":{"role":"symbol","title":">>-(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":">>-"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StreamType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"UserState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">, ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Infix operator for "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" named "},{"type":"emphasis","inlineContent":[{"type":"text","text":"bind"}]},{"type":"text","text":". It has the same precedence as the"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" coalescing operator ("},{"type":"codeVoice","code":"??"},{"type":"text","text":")."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/__-(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/__-(_:_:)"},"doc://SwiftParsec/documentation/SwiftParsec/Configuration":{"role":"symbol","title":"Configuration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Configuration"},{"type":"text","text":" type is used to customize the framework."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Configuration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Configuration"}],"url":"\/documentation\/swiftparsec\/configuration"},"doc://SwiftParsec/documentation/SwiftParsec/*_(_:_:)":{"role":"symbol","title":"*>(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"*>"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StreamType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"UserState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param2"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Sequence parsing, discarding the value of the first parser. It has the same"},{"type":"text","text":" "},{"type":"text","text":"precedence as the equality operator ("},{"type":"codeVoice","code":"=="},{"type":"text","text":")."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/*_(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/*_(_:_:)"},"doc://SwiftParsec/documentation/SwiftParsec/Permutation":{"role":"symbol","title":"Permutation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Permutation"}],"abstract":[{"type":"text","text":"The type "},{"type":"codeVoice","code":"Permutation"},{"type":"text","text":" denotes a permutation that can be converted to a"},{"type":"text","text":" "},{"type":"codeVoice","code":"GenericParser"},{"type":"text","text":" that returns an array of values of type "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" on success."},{"type":"text","text":" "},{"type":"text","text":"The values in the array have the same order as the parsers in the"},{"type":"text","text":" "},{"type":"text","text":"permutation. In the following exemple "},{"type":"codeVoice","code":"parser"},{"type":"text","text":" applies to any permutation of"},{"type":"text","text":" "},{"type":"text","text":"the characters ‘a’, ‘b’ and ‘c’ and always returns the string "},{"type":"codeVoice","code":"\"abc\""},{"type":"text","text":" on"},{"type":"text","text":" "},{"type":"text","text":"success."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Permutation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Permutation"}],"url":"\/documentation\/swiftparsec\/permutation"},"doc://SwiftParsec/documentation/SwiftParsec/==(_:_:)-66ml4":{"role":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SourcePosition","preciseIdentifier":"s:11SwiftParsec14SourcePositionV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SourcePosition","preciseIdentifier":"s:11SwiftParsec14SourcePositionV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Equality based on the line and column number."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/==(_:_:)-66ml4","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/==(_:_:)-66ml4"},"doc://SwiftParsec/documentation/SwiftParsec/GenericTokenParser":{"role":"symbol","title":"GenericTokenParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericTokenParser"}],"abstract":[{"type":"text","text":"Generic implementation of the "},{"type":"codeVoice","code":"TokenParser"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/GenericTokenParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericTokenParser"}],"url":"\/documentation\/swiftparsec\/generictokenparser"},"doc://SwiftParsec/documentation/SwiftParsec/==(_:_:)-8p070":{"role":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Message","preciseIdentifier":"s:11SwiftParsec7MessageO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Message","preciseIdentifier":"s:11SwiftParsec7MessageO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Equality based on the index."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/==(_:_:)-8p070","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/==(_:_:)-8p070"},"doc://SwiftParsec/documentation/SwiftParsec/_*(_:_:)":{"role":"symbol","title":"<*(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<*"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StreamType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"UserState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Param2"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param2"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Param1"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Sequence parsing, discarding the value of the second parser. It has the same"},{"type":"text","text":" "},{"type":"text","text":"precedence as the equality operator ("},{"type":"codeVoice","code":"=="},{"type":"text","text":")."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/_*(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/_*(_:_:)"},"doc://SwiftParsec/documentation/SwiftParsec/Parsec":{"role":"symbol","title":"Parsec","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsec"}],"abstract":[{"type":"codeVoice","code":"Parsec"},{"type":"text","text":" is a parser with stream type "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":", user state type "},{"type":"codeVoice","code":"UserState"},{"type":"text","text":" "},{"type":"text","text":"and return type "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Parsec","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parsec"}],"url":"\/documentation\/swiftparsec\/parsec"},"doc://SwiftParsec/documentation/SwiftParsec":{"role":"collection","title":"SwiftParsec","abstract":[],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec"},"doc://SwiftParsec/documentation/SwiftParsec/Operator":{"role":"symbol","title":"Operator","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operator"}],"abstract":[{"type":"text","text":"This data type specifies operators that work on values of type "},{"type":"codeVoice","code":"Result"},{"type":"text","text":". An"},{"type":"text","text":" "},{"type":"text","text":"operator is either binary infix or unary prefix or postfix. A binary"},{"type":"text","text":" "},{"type":"text","text":"operator has also an associated associativity."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Operator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Operator"}],"url":"\/documentation\/swiftparsec\/operator"},"doc://SwiftParsec/documentation/SwiftParsec/SourcePosition":{"role":"symbol","title":"SourcePosition","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourcePosition"}],"abstract":[{"type":"text","text":"SourcePosition represents source positions. It contains the name of the"},{"type":"text","text":" "},{"type":"text","text":"source (i.e. file name), a line number and a column number. The upper left"},{"type":"text","text":" "},{"type":"text","text":"is 1, 1. It implements the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"CustomStringConvertible"},{"type":"text","text":" "},{"type":"text","text":"protocols. The comparison is made using line and column number."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/SourcePosition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourcePosition"}],"url":"\/documentation\/swiftparsec\/sourceposition"},"doc://SwiftParsec/documentation/SwiftParsec/___(_:_:)":{"role":"symbol","title":"<^>(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<^>"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StreamType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"UserState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GenericParser","preciseIdentifier":"s:11SwiftParsec13GenericParserC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StreamType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UserState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Infix operator for "},{"type":"codeVoice","code":"map"},{"type":"text","text":". It has the same precedence as the equality"},{"type":"text","text":" "},{"type":"text","text":"operator ("},{"type":"codeVoice","code":"=="},{"type":"text","text":")."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/___(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/___(_:_:)"},"doc://SwiftParsec/documentation/SwiftParsec/Associativity":{"role":"symbol","title":"Associativity","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Associativity"}],"abstract":[{"type":"text","text":"This enumeration specifies the associativity of operators: right, left or"},{"type":"text","text":" "},{"type":"text","text":"none."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Associativity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Associativity"}],"url":"\/documentation\/swiftparsec\/associativity"},"doc://SwiftParsec/documentation/SwiftParsec/Message":{"role":"symbol","title":"Message","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Message"}],"abstract":[{"type":"text","text":"Message represents parse error messages. The fine distinction between"},{"type":"text","text":" "},{"type":"text","text":"different kinds of parse errors allows the system to generate quite good"},{"type":"text","text":" "},{"type":"text","text":"error messages for the user. It also allows error messages that are"},{"type":"text","text":" "},{"type":"text","text":"formatted in different languages. Each kind of message is generated by"},{"type":"text","text":" "},{"type":"text","text":"different combinators."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Message","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Message"}],"url":"\/documentation\/swiftparsec\/message"},"doc://SwiftParsec/documentation/SwiftParsec/_(_:_:)-4hyj0":{"role":"symbol","title":"<(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Message","preciseIdentifier":"s:11SwiftParsec7MessageO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Message","preciseIdentifier":"s:11SwiftParsec7MessageO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Comparison based on the index."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/_(_:_:)-4hyj0","kind":"symbol","type":"topic","url":"\/documentation\/swiftparsec\/_(_:_:)-4hyj0"},"doc://SwiftParsec/documentation/SwiftParsec/OperatorTable":{"role":"symbol","title":"OperatorTable","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OperatorTable"}],"abstract":[{"type":"text","text":"Represents a table of  operators. The "},{"type":"codeVoice","code":"makeExpressionParser()"},{"type":"text","text":" method is"},{"type":"text","text":" "},{"type":"text","text":"used to create parsers based on the table."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/OperatorTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OperatorTable"}],"url":"\/documentation\/swiftparsec\/operatortable"},"doc://SwiftParsec/documentation/SwiftParsec/Stream":{"role":"symbol","title":"Stream","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Stream"},{"type":"text","text":" instance is responsible for maintaining the position of the"},{"type":"text","text":" "},{"type":"text","text":"parser’s stream."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/Stream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/swiftparsec\/stream"},"doc://SwiftParsec/documentation/SwiftParsec/TokenParser":{"role":"symbol","title":"TokenParser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TokenParser"}],"abstract":[{"type":"text","text":"Types implementing this protocol hold lexical parsers."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/TokenParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenParser"}],"url":"\/documentation\/swiftparsec\/tokenparser"},"doc://SwiftParsec/documentation/SwiftParsec/LanguageDefinition":{"role":"symbol","title":"LanguageDefinition","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LanguageDefinition"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LanguageDefinition"},{"type":"text","text":" structure contains all parameterizable features of"},{"type":"text","text":" "},{"type":"text","text":"the token parser. There is some default definitions provided by SwiftParsec."}],"identifier":"doc:\/\/SwiftParsec\/documentation\/SwiftParsec\/LanguageDefinition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LanguageDefinition"}],"url":"\/documentation\/swiftparsec\/languagedefinition"}}}